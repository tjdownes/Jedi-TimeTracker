<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent  xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 width="100%" height="100%"
					 creationComplete="onCreationComplete(event)">
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.FlexEvent;
		
			[Bindable] private var clientData:ArrayCollection;	
			[Bindable] private var projectData:ArrayCollection;	
			[Bindable] private var hourData:ArrayCollection;
			[Bindable] public var dbconnection:SQLConnection;
			
			private var cselectData:SQLStatement;
			private var pselectData:SQLStatement;
			private var hselectData:SQLStatement;
			
			private function onCreationComplete(event:FlexEvent):void 
			{
				this.addEventListener(FlexEvent.SHOW, onShow);
				executeDataFunctions();
			}
				
			private function onShow(event:FlexEvent):void
			{
				executeDataFunctions();
			}
				
			private function executeDataFunctions():void
			{
				loadClients();
				loadProjects();
				loadHours();
			}
			
			private function dateLabel(item:Object,col:DataGridColumn):String {
				var theDate:Date = new Date(item.date);
				return myDateFormatter.format(theDate);
			}
			
			private function loadClients():void {
				cselectData = new SQLStatement();
				cselectData.sqlConnection = dbconnection;		
				cselectData.text = "select clients.id, clients.name from clients order by name asc";	
				cselectData.addEventListener(SQLEvent.RESULT, clientResultHandler);
				cselectData.execute();	
			}
			
			private function loadProjects():void {
				pselectData = new SQLStatement();
				pselectData.sqlConnection = dbconnection;		
				pselectData.text = "select projects.id, projects.name as project, projects.description, clients.name as client, clients.id as clientid from projects, clients where projects.active=1 and projects.clientidfk = clients.id";
				if(clientfield.selectedIndex != 0 && clientfield.selectedIndex != -1) pselectData.text+= " and projects.clientidfk = "+clientfield.selectedItem.id;
				pselectData.text +=" order by projects.name asc";	
				pselectData.addEventListener(SQLEvent.RESULT, projectResultHandler);
				pselectData.execute();
			}
			
			private function loadHours():void {
				hselectData = new SQLStatement();
				hselectData.sqlConnection = dbconnection;		
				hselectData.text = 'select sum(hours.hours) as total, projects.name as project, clients.name as client from hours, projects, clients where hours.projectidfk = projects.id and projects.clientidfk = clients.id ';
				if(clientfield.selectedIndex !=0 && clientfield.selectedIndex != -1) hselectData.text+=' and projects.clientidfk = '+clientfield.selectedItem.id;	
				if(projectfield.selectedIndex != 0 && projectfield.selectedIndex != -1) hselectData.text+=' and projects.id = '+projectfield.selectedItem.id;
				if(dateafterfield.selectedDate != null) hselectData.text+= ' and julianday(date) >= julianday("' + dbDateFormatter.format(dateafterfield.selectedDate) + '") ';
				if(datebeforefield.selectedDate != null) hselectData.text+= ' and julianday(date) <= julianday("' + dbDateFormatter.format(datebeforefield.selectedDate) + '") ';
				hselectData.text+=' group by hours.projectidfk';
				hselectData.addEventListener(SQLEvent.RESULT, hoursResultHandler);
				hselectData.execute();	
				
			}
			
			private function clientResultHandler(event:SQLEvent):void {
				var result:SQLResult = cselectData.getResult();
				var data:ArrayCollection = new ArrayCollection(result.data);
				var newItem:Object = new Object;
				newItem.name = "All Clients";
				data.addItemAt(newItem, 0);
				clientData = data;
					
			}
			
			private function projectResultHandler(event:SQLEvent):void {
				var result:SQLResult = pselectData.getResult();
				var data:ArrayCollection = new ArrayCollection(result.data);
				var newItem:Object = new Object;
				newItem.project = "All Projects";
				data.addItemAt(newItem, 0);
				projectData = data;
					
			}
			
			private function hoursResultHandler(event:SQLEvent):void {
				var result:SQLResult = hselectData.getResult();
				hourData = new ArrayCollection(result.data);
			}
			
			
			private function projectLabel(item:Object,col:DataGridColumn=null):String {
				if(item.client == null) return item.project;
				return item.project + " (" + item.client + ")";
			}
			
			private function projectLabelForChart(item:Object,field:String,index:Number,percentValue:Number):String {
				return projectLabel(item);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:DateFormatter id="myDateFormatter" formatString="M/D/YY" />
		<mx:DateFormatter id="dbDateFormatter" formatString="YYYY-MM-DD" />
	</fx:Declarations>

	<s:RichText text="Stats" styleName="Title" />
	
	<s:Form>
		<s:FormItem label="Client">
			<s:DropDownList id="clientfield" dataProvider="{clientData}" labelField="name" change="loadProjects();loadHours()" />
		</s:FormItem>
		<s:FormItem label="Project">
			<s:DropDownList id="projectfield" dataProvider="{projectData}" labelFunction="projectLabel" change="loadHours()"/>
		</s:FormItem>
		<s:FormItem label="Date Filter">
			<s:HGroup>
				<mx:DateField id="dateafterfield" change="loadHours()" /> 
				<s:Label text=" to " /> 
				<mx:DateField id="datebeforefield" change="loadHours()" />
			</s:HGroup>
		</s:FormItem>
	</s:Form>

	<mx:PieChart id="hourreport" width="100%" height="100%" dataProvider="{hourData}" showDataTips="true">
		<mx:series>
			<mx:PieSeries nameField="project" field="total" labelPosition="callout" labelFunction="projectLabelForChart"/>
		</mx:series>
	</mx:PieChart>

	<mx:Legend dataProvider="{hourreport}"/>

</s:NavigatorContent>
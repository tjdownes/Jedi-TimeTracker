<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent  xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 width="100%" height="100%" show="loadData()">
	<s:layout>
		<s:VerticalLayout />
	</s:layout>

<fx:Script>
<![CDATA[
import mx.collections.ArrayCollection;

[Bindable] private var projectData:ArrayCollection;				
[Bindable] public var dbconnection:SQLConnection;
[Bindable] private var clientList:ArrayCollection;
[Bindable] private var fullclientList:ArrayCollection;

private var selectData:SQLStatement;
private var clientData:SQLStatement;

//used to notice what we are editing
private var currentItem:int = 0;

//used to notice when clientData is done loading. We only care about clientData
//cuz you can't edit till project data is done
[Bindable] private var ready:Boolean = false;

private function cancel():void {
	namefield.text = "";
	descriptionfield.text = "";
	//client
	activefield.selected = false;
	dgProjects.selectedIndex = -1;
	currentItem = 0;	
}



private function loadData(loadClients:Boolean=true):void {
	trace("called loadData in projects");
	var selClient:Number = clientFilter.selectedIndex;
	
	selectData = new SQLStatement();
	selectData.sqlConnection = dbconnection;		
	selectData.text = "select projects.id, projects.active, projects.name, projects.description, projects.clientidfk, clients.name as client from projects, clients where projects.clientidfk = clients.id ";

	if(selClient != 0 && selClient != -1) selectData.text+= "and projects.clientidfk = " + clientFilter.selectedItem.id;
	if(activeFilter.selected) selectData.text+= " and projects.active=1";
	
	selectData.text+=" order by projects.name asc";	
	trace('sql is '+selectData.text);
	selectData.addEventListener(SQLEvent.RESULT, resultHandler);
	selectData.execute();
	
	if(loadClients) {
		//set ready to false so editor knows it needs to wait a sec
		ready = false;
		clientData = new SQLStatement();
		clientData.sqlConnection = dbconnection;		
		clientData.text = "select id, name from clients order by name asc";	
		clientData.addEventListener(SQLEvent.RESULT, loadedClientsHandler);
		clientData.execute();
	}
}

private function resultHandler(event:SQLEvent):void {
	var result:SQLResult = selectData.getResult();
	projectData = new ArrayCollection(result.data);
}

private function loadedClientsHandler(event:SQLEvent):void {
	var result:SQLResult = clientData.getResult();

	if(result.data != null) {
		//full client list is used by our editor and needs to NOT have the pick one
		fullclientList = new ArrayCollection(result.data.concat());
	
		clientList = new ArrayCollection(result.data.concat());
		
		//add a blank
		var newItem:Object = new Object;
		newItem.name = "Pick One";
		clientList.addItemAt(newItem, 0);
		clientFilter.selectedIndex=0;
	}
	ready = true;
}

private function showEdit(item:Object):void {
	//update form fields
	namefield.text = item.name;
	descriptionfield.text = item.description;
	//need to loop through and set client
	for(var i:int=0; i < fullclientList.length; i++) {
		if(fullclientList[i].id == item.clientidfk) clientfield.selectedIndex=i;
	}
	if(item.active == 1) activefield.selected = true;
	else activefield.selected = false;
	trace(item.active);

	currentItem = item.id;
}

private function deleteProject(item:Object):void {
	var id:int = item.id;
	var delStatement:SQLStatement = new SQLStatement();
	delStatement.sqlConnection = dbconnection;
	delStatement.text = "delete from projects where id = :id";
	delStatement.parameters[":id"] = id;
	delStatement.addEventListener(SQLEvent.RESULT, refreshHandler);
	delStatement.execute();
	//TODO: Delete hours
}

/*
private function filter():void {
	dgProjects.dataProvider.filterFunction = filterData;
    dgProjects.dataProvider.refresh();		
}

private function filterData(item:Object):Boolean {
	var activeOnly:Boolean = activeFilter.selected;

	if(
		(!activeOnly || item.active==1)
	) return true;
	else return false;              
}
*/

private function refreshHandler(event:SQLEvent):void {
	loadData();
}

private function save():void {
	
	var sql:String;
	if(currentItem != 0) {
		
		var updStmt:SQLStatement = new SQLStatement();
		updStmt.sqlConnection = dbconnection;
		sql = "update projects " +
		"set name = :name, " +
		"description = :description, " +
		"clientidfk = :clientidfk, " +
		"active = :active " +
		"where id = :id"; 
		
		updStmt.parameters[":name"] = namefield.text;
		updStmt.parameters[":description"] = descriptionfield.text;
		updStmt.parameters[":clientidfk"] = clientfield.selectedItem.id;

		if(activefield.selected) updStmt.parameters[":active"] = 1;
		else updStmt.parameters[":active"] = 0;
		
		updStmt.parameters[":id"] = currentItem;
		
		updStmt.text = sql;
		trace("update sql "+updStmt.text);
		updStmt.addEventListener(SQLEvent.RESULT, refreshHandler);
		
		updStmt.execute();
		
		
	} else {

		var insStmt:SQLStatement = new SQLStatement();
		insStmt.sqlConnection = dbconnection;
		sql = "insert into projects(name,description,clientidfk,active) values(:name,:description,:clientidfk,:active)"; 
		insStmt.parameters[":name"] = namefield.text;
		insStmt.parameters[":description"] = descriptionfield.text;
		
		if(clientfield.selectedIndex != -1)
			insStmt.parameters[":clientidfk"] = clientfield.selectedItem.id;
		
		if(activefield.selected) 
			insStmt.parameters[":active"] = 1;
		else 
			insStmt.parameters[":active"] = 0;
		
		trace(activefield.selected);
		
		insStmt.text = sql;
		insStmt.addEventListener(SQLEvent.RESULT, refreshHandler);
		
		insStmt.execute();
		
	}

	currentItem = 0;
	dgProjects.selectedIndex = -1;
	namefield.text = "";
	descriptionfield.text = "";
	clientfield.selectedIndex = -1;
	activefield.selected = false;	
}

]]>
</fx:Script>
	
	<s:RichText text="Projects" styleName="Title" />
		
	<s:HGroup>
		<s:Label text="Client: " />
		<s:DropDownList id="clientFilter" dataProvider="{clientList}" labelField="name" change="loadData(false)"/>
		<s:Label text="Active Only: " />
		<s:CheckBox id="activeFilter" change="loadData(false)" />
	</s:HGroup>
	
	<s:DataGrid id="dgProjects" width="100%" dataProvider="{projectData}" height="100%">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Name" dataField="name" />
				<s:GridColumn headerText="Description" dataField="description" />
				<s:GridColumn headerText="Client" dataField="client" />
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<s:Form id="editForm">
		<s:FormItem label="Name" required="true" >
			<s:TextInput id="namefield" />
		</s:FormItem>
							
		<s:FormItem label="Description" required="true">
			<s:TextInput id="descriptionfield" />						
		</s:FormItem>
	
		<s:FormItem label="Client" required="true">
			<s:DropDownList id="clientfield" dataProvider="{fullclientList}" labelField="name" />
		</s:FormItem>
	
		<s:FormItem label="Active">
			<s:CheckBox id="activefield" />
		</s:FormItem>
	</s:Form>
	
	<mx:ControlBar horizontalAlign="left">
		<s:Button label="Save" click="save()"  styleName="saveButton"/>
		<s:Button label="Cancel" click="cancel()" styleName="cancelButton" />
		<s:Button label="Edit Project" click="if(dgProjects.selectedIndex!=-1) showEdit(dgProjects.selectedItem)" enabled="{dgProjects.selectedIndex!=-1 &amp;&amp; ready==true}"/>
		<s:Button label="Delete Project" click="if(dgProjects.selectedIndex!=-1) deleteProject(dgProjects.selectedItem)" enabled="{dgProjects.selectedIndex!=-1 &amp;&amp; ready==true}" />	
	</mx:ControlBar>

</s:NavigatorContent>

<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent  xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 width="100%" height="100%" show="initCom()" creationComplete="initCom()">

	<s:layout>
		<s:VerticalLayout />
	</s:layout>

	<fx:Script>
		<![CDATA[
		import mx.collections.ArrayCollection;
		import mx.controls.dataGridClasses.DataGridColumn;
		
		[Bindable] private var clientData:ArrayCollection;	
		[Bindable] private var projectData:ArrayCollection;	
		[Bindable] private var todaysHoursData:ArrayCollection;			
		[Bindable] public var dbconnection:SQLConnection;
		
		private var selectData:SQLStatement;
		private var pselectData:SQLStatement;
		private var hourDataStatement:SQLStatement;
		
		private function initCom():void {
			loadClients();
			loadProjects();
			loadHours();
		}
		
		private function dateLabel(item:Object,col:DataGridColumn):String {
			var theDate:Date = new Date(item.date);
			return myDateFormatter.format(theDate);
		}
		
		private function loadClients():void {
			selectData = new SQLStatement();
			selectData.sqlConnection = dbconnection;		
			selectData.text = "select clients.id, clients.name from clients order by name asc";	
			selectData.addEventListener(SQLEvent.RESULT, clientResultHandler);
			selectData.execute();	
		}
		
		private function loadProjects():void {
			pselectData = new SQLStatement();
			pselectData.sqlConnection = dbconnection;		
			pselectData.text = "select projects.id, projects.name as project, projects.description, clients.name as client, clients.id as clientid from projects, clients where projects.active=1 and projects.clientidfk = clients.id";
			if(clientfield.selectedIndex != 0 && clientfield.selectedIndex != -1) pselectData.text+= " and projects.clientidfk = "+clientfield.selectedItem.id;
			pselectData.text +=" order by projects.name asc";	
			pselectData.addEventListener(SQLEvent.RESULT, projectResultHandler);
			pselectData.execute();
		}
		
		private function loadHours():void {
			hourDataStatement = new SQLStatement();
			hourDataStatement.sqlConnection = dbconnection;		
			hourDataStatement.text = 'select hours.description, hours.hours, hours.date, projects.name as project, clients.name as client from hours, projects, clients where hours.projectidfk = projects.id and projects.clientidfk = clients.id ';
			if(clientfield.selectedIndex !=0 && clientfield.selectedIndex != -1) hourDataStatement.text+=' and projects.clientidfk = '+clientfield.selectedItem.id;	
			if(projectfield.selectedIndex != 0 && projectfield.selectedIndex != -1) hourDataStatement.text+=' and projects.id = '+projectfield.selectedItem.id;
			if(dateafterfield.selectedDate != null) hourDataStatement.text+= ' and julianday(date) >= julianday("' + dbDateFormatter.format(dateafterfield.selectedDate) + '") ';
			if(datebeforefield.selectedDate != null) hourDataStatement.text+= ' and julianday(date) <= julianday("' + dbDateFormatter.format(datebeforefield.selectedDate) + '") ';
			if(descriptionfield.text != '') hourDataStatement.text+= " and hours.description like '%" + descriptionfield.text + "%' ";
			hourDataStatement.text+=' order by date desc';	
			trace(hourDataStatement.text);
			hourDataStatement.addEventListener(SQLEvent.RESULT, hoursResultHandler);
			hourDataStatement.execute();	
			
		}
		
		private function clientResultHandler(event:SQLEvent):void {
			var result:SQLResult = selectData.getResult();
			var data:ArrayCollection = new ArrayCollection(result.data);
			var newItem:Object = new Object;
			newItem.name = "Pick One";
			data.addItemAt(newItem, 0);
			clientData = data;
				
		}
		
		private function projectResultHandler(event:SQLEvent):void {
			var result:SQLResult = pselectData.getResult();
			var data:ArrayCollection = new ArrayCollection(result.data);
			var newItem:Object = new Object;
			newItem.name = "Pick One";
			data.addItemAt(newItem, 0);
			projectData = data;
				
		}
		
		private function hoursResultHandler(event:SQLEvent):void {
			var result:SQLResult = hourDataStatement.getResult();
			todaysHoursData = new ArrayCollection(result.data);
			//lets do a TOTAL
			var total:Number = 0;
			for(var i:Number=0; i < todaysHoursData.length; i++) {		
				total+= todaysHoursData[i].hours;
			}
			totalhours.text = total.toString();
		}
		
		
		private function projectLabel(item:Object,col:DataGridColumn=null):String {
			if(item.client == null) return item.name;
			return item.project + " (" + item.client + ")";
		}
	]]>
	</fx:Script>

	<fx:Declarations>
		<mx:DateFormatter id="myDateFormatter" formatString="M/D/YY" />
		<mx:DateFormatter id="dbDateFormatter" formatString="YYYY-MM-DD" />
	</fx:Declarations>
	
	<s:RichText text="All Hours" styleName="Title" />
	
	<s:Form>
		<s:FormItem label="Client">
			<s:DropDownList id="clientfield" dataProvider="{clientData}" labelField="name" change="loadProjects();loadHours()" />
		</s:FormItem>
		<s:FormItem label="Project">
			<s:DropDownList id="projectfield" dataProvider="{projectData}" labelFunction="projectLabel" change="loadHours()"/>
		</s:FormItem>
		<s:FormItem label="Date Filter">
			<s:HGroup>
				<mx:DateField id="dateafterfield" change="loadHours()" /> 
				<s:Label text=" to " /> 
				<mx:DateField id="datebeforefield" change="loadHours()" />
			</s:HGroup>
		</s:FormItem>
		<s:FormItem label="Description">
			<s:TextInput id="descriptionfield" change="loadHours()" />
		</s:FormItem>
	</s:Form>
	
	<s:DataGrid id="todayshours" dataProvider="{todaysHoursData}" width="100%" height="100%" sortableColumns="true" variableRowHeight="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Date" labelFunction="dateLabel" width="55" />
				<s:GridColumn headerText="Project" labelFunction="projectLabel" />
				<s:GridColumn headerText="#" dataField="hours" width="35" />
				<s:GridColumn headerText="Description" dataField="description" />
			</s:ArrayList>
		</s:columns>		
	</s:DataGrid>
	
	<s:HGroup width="100%" horizontalAlign="right">
		<s:Label text="Total Hours: "/> 
		<s:RichText id="totalhours" />	
	</s:HGroup>

</s:NavigatorContent>